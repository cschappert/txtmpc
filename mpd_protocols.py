from typing import Protocol, Any, Iterator, Dict, Optional, Union

class MPDCommandsProtocol(Protocol):
    def add(self, *args: Any, **kwargs: Any) -> Any: ...
    def add_command(self, *args: Any, **kwargs: Any) -> Any: ...
    def addid(self, *args: Any, **kwargs: Any) -> Any: ...
    def addtagid(self, *args: Any, **kwargs: Any) -> Any: ...
    def albumart(self, *args: Any, **kwargs: Any) -> Any: ...
    def binarylimit(self, *args: Any, **kwargs: Any) -> Any: ...
    def channels(self, *args: Any, **kwargs: Any) -> Any: ...
    def clear(self, *args: Any, **kwargs: Any) -> Any: ...
    def clearerror(self, *args: Any, **kwargs: Any) -> Any: ...
    def cleartagid(self, *args: Any, **kwargs: Any) -> Any: ...
    def close(self, *args: Any, **kwargs: Any) -> Any: ...
    def command_list_end(self, *args: Any, **kwargs: Any) -> Any: ...
    def command_list_ok_begin(self, *args: Any, **kwargs: Any) -> Any: ...
    def commands(self, *args: Any, **kwargs: Any) -> Any: ...
    def config(self, *args: Any, **kwargs: Any) -> Any: ...
    def connect(self, *args: Any, **kwargs: Any) -> Any: ...
    def consume(self, *args: Any, **kwargs: Any) -> Any: ...
    def count(self, *args: Any, **kwargs: Any) -> Any: ...
    def crossfade(self, *args: Any, **kwargs: Any) -> Any: ...
    def currentsong(self, *args: Any, **kwargs: Any) -> Any: ...
    def decoders(self, *args: Any, **kwargs: Any) -> Any: ...
    def delete(self, *args: Any, **kwargs: Any) -> Any: ...
    def deleteid(self, *args: Any, **kwargs: Any) -> Any: ...
    def delpartition(self, *args: Any, **kwargs: Any) -> Any: ...
    def disableoutput(self, *args: Any, **kwargs: Any) -> Any: ...
    def disconnect(self, *args: Any, **kwargs: Any) -> Any: ...
    def enableoutput(self, *args: Any, **kwargs: Any) -> Any: ...
    def fileno(self, *args: Any, **kwargs: Any) -> Any: ...
    def find(self, *args: Any, **kwargs: Any) -> Any: ...
    def findadd(self, *args: Any, **kwargs: Any) -> Any: ...
    def idle(self, *args: Any, **kwargs: Any) -> Any: ...
    def kill(self, *args: Any, **kwargs: Any) -> Any: ...
    def list(self, *args: Any, **kwargs: Any) -> Any: ...
    def listall(self, *args: Any, **kwargs: Any) -> Any: ...
    def listallinfo(self, *args: Any, **kwargs: Any) -> Any: ...
    def listfiles(self, *args: Any, **kwargs: Any) -> Any: ...
    def listmounts(self, *args: Any, **kwargs: Any) -> Any: ...
    def listneighbors(self, *args: Any, **kwargs: Any) -> Any: ...
    def listpartitions(self, *args: Any, **kwargs: Any) -> Any: ...
    def listplaylist(self, *args: Any, **kwargs: Any) -> Any: ...
    def listplaylistinfo(self, *args: Any, **kwargs: Any) -> Any: ...
    def listplaylists(self, *args: Any, **kwargs: Any) -> Any: ...
    def load(self, *args: Any, **kwargs: Any) -> Any: ...
    def lsinfo(self, *args: Any, **kwargs: Any) -> Any: ...
    def mixrampdb(self, *args: Any, **kwargs: Any) -> Any: ...
    def mixrampdelay(self, *args: Any, **kwargs: Any) -> Any: ...
    def mount(self, *args: Any, **kwargs: Any) -> Any: ...
    def move(self, *args: Any, **kwargs: Any) -> Any: ...
    def moveid(self, *args: Any, **kwargs: Any) -> Any: ...
    def moveoutput(self, *args: Any, **kwargs: Any) -> Any: ...
    def newpartition(self, *args: Any, **kwargs: Any) -> Any: ...
    def next(self, *args: Any, **kwargs: Any) -> Any: ...
    def noidle(self, *args: Any, **kwargs: Any) -> Any: ...
    def notcommands(self, *args: Any, **kwargs: Any) -> Any: ...
    def outputs(self, *args: Any, **kwargs: Any) -> Any: ...
    def outputvolume(self, *args: Any, **kwargs: Any) -> Any: ...
    def partition(self, *args: Any, **kwargs: Any) -> Any: ...
    def password(self, *args: Any, **kwargs: Any) -> Any: ...
    def pause(self, *args: Any, **kwargs: Any) -> Any: ...
    def ping(self, *args: Any, **kwargs: Any) -> Any: ...
    def play(self, *args: Any, **kwargs: Any) -> Any: ...
    def playid(self, *args: Any, **kwargs: Any) -> Any: ...
    def playlist(self, *args: Any, **kwargs: Any) -> Any: ...
    def playlistadd(self, *args: Any, **kwargs: Any) -> Any: ...
    def playlistclear(self, *args: Any, **kwargs: Any) -> Any: ...
    def playlistdelete(self, *args: Any, **kwargs: Any) -> Any: ...
    def playlistfind(self, *args: Any, **kwargs: Any) -> Any: ...
    def playlistid(self, *args: Any, **kwargs: Any) -> Any: ...
    def playlistinfo(self, *args: Any, **kwargs: Any) -> Any: ...
    def playlistmove(self, *args: Any, **kwargs: Any) -> Any: ...
    def playlistsearch(self, *args: Any, **kwargs: Any) -> Any: ...
    def plchanges(self, *args: Any, **kwargs: Any) -> Any: ...
    def plchangesposid(self, *args: Any, **kwargs: Any) -> Any: ...
    def previous(self, *args: Any, **kwargs: Any) -> Any: ...
    def prio(self, *args: Any, **kwargs: Any) -> Any: ...
    def prioid(self, *args: Any, **kwargs: Any) -> Any: ...
    def random(self, *args: Any, **kwargs: Any) -> Any: ...
    def rangeid(self, *args: Any, **kwargs: Any) -> Any: ...
    def readcomments(self, *args: Any, **kwargs: Any) -> Any: ...
    def readmessages(self, *args: Any, **kwargs: Any) -> Any: ...
    def readpicture(self, *args: Any, **kwargs: Any) -> Any: ...
    def remove_command(self, *args: Any, **kwargs: Any) -> Any: ...
    def rename(self, *args: Any, **kwargs: Any) -> Any: ...
    def repeat(self, *args: Any, **kwargs: Any) -> Any: ...
    def replay_gain_mode(self, *args: Any, **kwargs: Any) -> Any: ...
    def replay_gain_status(self, *args: Any, **kwargs: Any) -> Any: ...
    def rescan(self, *args: Any, **kwargs: Any) -> Any: ...
    def rm(self, *args: Any, **kwargs: Any) -> Any: ...
    def save(self, *args: Any, **kwargs: Any) -> Any: ...
    def search(self, *args: Any, **kwargs: Any) -> Any: ...
    def searchadd(self, *args: Any, **kwargs: Any) -> Any: ...
    def searchaddpl(self, *args: Any, **kwargs: Any) -> Any: ...
    def seek(self, *args: Any, **kwargs: Any) -> Any: ...
    def seekcur(self, *args: Any, **kwargs: Any) -> Any: ...
    def seekid(self, *args: Any, **kwargs: Any) -> Any: ...
    def sendmessage(self, *args: Any, **kwargs: Any) -> Any: ...
    def setvol(self, *args: Any, **kwargs: Any) -> Any: ...
    def shuffle(self, *args: Any, **kwargs: Any) -> Any: ...
    def single(self, *args: Any, **kwargs: Any) -> Any: ...
    def stats(self, *args: Any, **kwargs: Any) -> Any: ...
    def status(self, *args: Any, **kwargs: Any) -> Any: ...
    def sticker_delete(self, *args: Any, **kwargs: Any) -> Any: ...
    def sticker_find(self, *args: Any, **kwargs: Any) -> Any: ...
    def sticker_get(self, *args: Any, **kwargs: Any) -> Any: ...
    def sticker_list(self, *args: Any, **kwargs: Any) -> Any: ...
    def sticker_set(self, *args: Any, **kwargs: Any) -> Any: ...
    def stop(self, *args: Any, **kwargs: Any) -> Any: ...
    def subscribe(self, *args: Any, **kwargs: Any) -> Any: ...
    def swap(self, *args: Any, **kwargs: Any) -> Any: ...
    def swapid(self, *args: Any, **kwargs: Any) -> Any: ...
    def tagtypes(self, *args: Any, **kwargs: Any) -> Any: ...
    def toggleoutput(self, *args: Any, **kwargs: Any) -> Any: ...
    def unmount(self, *args: Any, **kwargs: Any) -> Any: ...
    def unsubscribe(self, *args: Any, **kwargs: Any) -> Any: ...
    def update(self, *args: Any, **kwargs: Any) -> Any: ...
    def urlhandlers(self, *args: Any, **kwargs: Any) -> Any: ...
    def volume(self, *args: Any, **kwargs: Any) -> Any: ...